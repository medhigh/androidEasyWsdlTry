package Wsdl2Code.WebServices.ServiceProviderBinding;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 10/22/2015 8:44:42 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import Wsdl2Code.WebServices.ServiceProviderBinding.AppointmentXml;
import Wsdl2Code.WebServices.ServiceProviderBinding.VectorString;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class AppointmentResultsXml implements KvmSerializable {
    
    public AppointmentXml appointment;
    public String complains;
    public String editDate;
    public boolean editDateSpecified;
    public VectorString healthcareCodes;
    public String id;
    public String info;
    public String suggestedTreatment;
    
    public AppointmentResultsXml(){}
    
    public AppointmentResultsXml(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Appointment"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Appointment");
            appointment =  new AppointmentXml (j);
            
        }
        if (soapObject.hasProperty("Complains"))
        {
            Object obj = soapObject.getProperty("Complains");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                complains = j.toString();
            }else if (obj!= null && obj instanceof String){
                complains = (String) obj;
            }
        }
        if (soapObject.hasProperty("EditDate"))
        {
            Object obj = soapObject.getProperty("EditDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                editDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                editDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("EditDateSpecified"))
        {
            Object obj = soapObject.getProperty("EditDateSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                editDateSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                editDateSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("HealthcareCodes"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("HealthcareCodes");
            healthcareCodes = new VectorString(j);
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Info"))
        {
            Object obj = soapObject.getProperty("Info");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                info = j.toString();
            }else if (obj!= null && obj instanceof String){
                info = (String) obj;
            }
        }
        if (soapObject.hasProperty("SuggestedTreatment"))
        {
            Object obj = soapObject.getProperty("SuggestedTreatment");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                suggestedTreatment = j.toString();
            }else if (obj!= null && obj instanceof String){
                suggestedTreatment = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return appointment;
            case 1:
                return complains;
            case 2:
                return editDate;
            case 3:
                return editDateSpecified;
            case 4:
                return healthcareCodes;
            case 5:
                return id;
            case 6:
                return info;
            case 7:
                return suggestedTreatment;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 8;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = AppointmentXml.class;
                info.name = "Appointment";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Complains";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EditDate";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "EditDateSpecified";
                break;
            case 4:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "HealthcareCodes";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Info";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SuggestedTreatment";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
