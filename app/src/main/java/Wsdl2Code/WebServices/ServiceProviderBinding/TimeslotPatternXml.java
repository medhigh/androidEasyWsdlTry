package Wsdl2Code.WebServices.ServiceProviderBinding;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 10/22/2015 8:44:42 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import Wsdl2Code.WebServices.ServiceProviderBinding.LocationXml;
import Wsdl2Code.WebServices.ServiceProviderBinding.VectorString;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class TimeslotPatternXml implements KvmSerializable {
    
    public boolean enabled;
    public boolean enabledSpecified;
    public String endTime;
    public boolean endTimeSpecified;
    public String id;
    public LocationXml location;
    public String starTime;
    public boolean starTimeSpecified;
    public int timeslotDuration;
    public boolean timeslotDurationSpecified;
    public int type;
    public boolean typeSpecified;
    public VectorString weekDays;
    public int weekType;
    public boolean weekTypeSpecified;
    
    public TimeslotPatternXml(){}
    
    public TimeslotPatternXml(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Enabled"))
        {
            Object obj = soapObject.getProperty("Enabled");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                enabled = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                enabled = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("EnabledSpecified"))
        {
            Object obj = soapObject.getProperty("EnabledSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                enabledSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                enabledSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("EndTime"))
        {
            Object obj = soapObject.getProperty("EndTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                endTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                endTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("EndTimeSpecified"))
        {
            Object obj = soapObject.getProperty("EndTimeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                endTimeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                endTimeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Location"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Location");
            location =  new LocationXml (j);
            
        }
        if (soapObject.hasProperty("StarTime"))
        {
            Object obj = soapObject.getProperty("StarTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                starTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                starTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("StarTimeSpecified"))
        {
            Object obj = soapObject.getProperty("StarTimeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                starTimeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                starTimeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("TimeslotDuration"))
        {
            Object obj = soapObject.getProperty("TimeslotDuration");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                timeslotDuration = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                timeslotDuration = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("TimeslotDurationSpecified"))
        {
            Object obj = soapObject.getProperty("TimeslotDurationSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                timeslotDurationSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                timeslotDurationSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Type"))
        {
            Object obj = soapObject.getProperty("Type");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                type = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                type = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("TypeSpecified"))
        {
            Object obj = soapObject.getProperty("TypeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                typeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                typeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("WeekDays"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("WeekDays");
            weekDays = new VectorString(j);
        }
        if (soapObject.hasProperty("WeekType"))
        {
            Object obj = soapObject.getProperty("WeekType");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                weekType = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                weekType = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("WeekTypeSpecified"))
        {
            Object obj = soapObject.getProperty("WeekTypeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                weekTypeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                weekTypeSpecified = (Boolean) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return enabled;
            case 1:
                return enabledSpecified;
            case 2:
                return endTime;
            case 3:
                return endTimeSpecified;
            case 4:
                return id;
            case 5:
                return location;
            case 6:
                return starTime;
            case 7:
                return starTimeSpecified;
            case 8:
                return timeslotDuration;
            case 9:
                return timeslotDurationSpecified;
            case 10:
                return type;
            case 11:
                return typeSpecified;
            case 12:
                return weekDays;
            case 13:
                return weekType;
            case 14:
                return weekTypeSpecified;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 15;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Enabled";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "EnabledSpecified";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EndTime";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "EndTimeSpecified";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 5:
                info.type = LocationXml.class;
                info.name = "Location";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "StarTime";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "StarTimeSpecified";
                break;
            case 8:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "TimeslotDuration";
                break;
            case 9:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TimeslotDurationSpecified";
                break;
            case 10:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Type";
                break;
            case 11:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TypeSpecified";
                break;
            case 12:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "WeekDays";
                break;
            case 13:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "WeekType";
                break;
            case 14:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "WeekTypeSpecified";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
