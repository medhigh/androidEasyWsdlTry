package Wsdl2Code.WebServices.ServiceProviderBinding;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 10/22/2015 8:44:42 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import Wsdl2Code.WebServices.ServiceProviderBinding.AppointmentResultsXml;
import Wsdl2Code.WebServices.ServiceProviderBinding.PatientXml;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class AppointmentXml implements KvmSerializable {
    
    public AppointmentResultsXml appointmentResults;
    public String cancelReason;
    public String id;
    public String info;
    public PatientXml patient;
    public int state;
    public boolean stateSpecified;
    public String timeslot;
    
    public AppointmentXml(){}
    
    public AppointmentXml(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("AppointmentResults"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("AppointmentResults");
            appointmentResults =  new AppointmentResultsXml (j);
            
        }
        if (soapObject.hasProperty("CancelReason"))
        {
            Object obj = soapObject.getProperty("CancelReason");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cancelReason = j.toString();
            }else if (obj!= null && obj instanceof String){
                cancelReason = (String) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Info"))
        {
            Object obj = soapObject.getProperty("Info");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                info = j.toString();
            }else if (obj!= null && obj instanceof String){
                info = (String) obj;
            }
        }
        if (soapObject.hasProperty("Patient"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Patient");
            patient =  new PatientXml (j);
            
        }
        if (soapObject.hasProperty("State"))
        {
            Object obj = soapObject.getProperty("State");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                state = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                state = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("StateSpecified"))
        {
            Object obj = soapObject.getProperty("StateSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                stateSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                stateSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Timeslot"))
        {
            Object obj = soapObject.getProperty("Timeslot");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                timeslot = j.toString();
            }else if (obj!= null && obj instanceof String){
                timeslot = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return appointmentResults;
            case 1:
                return cancelReason;
            case 2:
                return id;
            case 3:
                return info;
            case 4:
                return patient;
            case 5:
                return state;
            case 6:
                return stateSpecified;
            case 7:
                return timeslot;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 8;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = AppointmentResultsXml.class;
                info.name = "AppointmentResults";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CancelReason";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Info";
                break;
            case 4:
                info.type = PatientXml.class;
                info.name = "Patient";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "State";
                break;
            case 6:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "StateSpecified";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Timeslot";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
